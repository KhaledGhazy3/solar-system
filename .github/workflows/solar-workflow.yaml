name: Solar System Workflow

on:
  workflow_dispatch:
  push:
    branches:
      - main
      - 'feature/*'
env:
    MONGO_URI: 'mongodb+srv://supercluster.d83jj.mongodb.net/superData'
    MONGO_USERNAME: ${{ vars.MONGO_USERNAME}}
    MONGO_PASSWORD: ${{ secrets.MONGO_PASSWORD}}  


jobs:
    unit-testing:
        name: unit-testing
        runs-on: ubuntu-latest
        steps:
        - name: checkout repo
          uses: actions/checkout@v3

        - name: setup nodejs 
          uses: actions/setup-node@v3
          with:
            nodejs-version: 20
        
        - name: Cache node modules
          uses: actions/cache@v3
          with:
            path: node_modules
            key: ${{ runner.os }}-node-modules-${{ hashFiles('**/package-lock.json') }}
        
        - name: install dependencies
          run: npm install

        - name: unit testing
          run: npm test 
        
        - name: Upload Unit Test Results
          uses: actions/upload-artifact@v3
          with:
            name: unit-test-results
            path: path/to/unit-test.xml

    code-coverage:
        name: code-coverage
        runs-on: ubuntu-latest
        steps:
        - name: checkout repo
          uses: actions/checkout@v3

        - name: setup nodejs 
          uses: actions/setup-node@v3
          with:
            node-version: 20

        - name: Cache node modules
          uses: actions/cache@v3
          with:
            path: node_modules
            key: ${{ runner.os }}-node-modules-${{ hashFiles('**/package-lock.json') }}

        - name: install dependencies
          run: npm install

        - name: Check Code Coverage
          continue-on-error: true
          run: npm run coverage
        
        
        - name: Archive Test Results
          uses: actions/upload-artifact@v3
          with:
            name: Code-Coverage-Result
            path: coverage
            retrntion-days: 5

    docker:
        name: container
        needs: [unit-testing, code-coverage]
        runs-on: ubuntu-latest
        steps:
        - name: checkout repo
          uses: actions/checkout@v3

        - name: dockerhub login
          uses: docker/login-action@v3
          with:
            username: ${{ vars.DOCKER_USERNAME}}
            password: ${{ secrets.DOCKER_PASSWORD}}

        - name: Build Docker Image
          uses: docker/build-push-action@v4
          with:
            context: .
            push: false
            tags: ${{ vars.DOCKER_USERNAME }}/solar-system:${{ github.sha }}
          
        - name: Test Docker Image
          run: |
              docker images
              docker run --name solar-system-app -d \
                -p 3000:3000 \
                -e MONGO_URI=$MONGO_URI  \
                -e MONGO_USERNAME=$MONGO_USERNAME  \
                -e MONGO_PASSWORD=$MONGO_PASSWORD  \
                ${{ vars.DOCKER_USERNAME }}/solar-system:${{ github.sha }}

              export IP=$(docker inspect -f '{{range.NetworkSettings.Networks}}{{.IPAddress}}{{end}}' solar-system-app)
              echo $IP
              echo Testing Image URL using wget
              wget -q -O - 127.0.0.1:3000/live | grep live

        - name: Build Docker Image
          uses: docker/build-push-action@v4
          with:
            context: .
            push: true
            tags: ${{ vars.DOCKER_USERNAME }}/solar-system:${{ github.sha }}

    dev-deploy: 
        needs: docker
        runs-on: ubuntu-latest
        steps:
            - name: checkout repo
              uses: actions/checkout@v3

            - name: install kubectl 
              uses: azure/setup-kubectl@v3
              with:
                version: 'v1.26.0'


            - name: set kubeconfig 
              uses: azure/k8s-set-context@v3
              with:
                method: kubeconfig
                kubeconfig: ${{ secrets.KUBECONFIG}}

            - name: kubernetes cluster
              run: | 
               kubectl version --short
               echo -------------------
               kubectl get nodes


            - name: Replace Tokens
              uses: cschleiden/replace-tokens@v1
              with:
                 tokenPrefix: '_{_'
                 tokenSuffix: '_}_'
                 files: '["kubernetes/development/*.yaml"]'
             
              env:
                NAMESPACE: ${{ vars.NAMESPACE}}
                REPLICAS: ${{ vars.REPLICAS}}
                IMAGE: ${{ vars.DOCKER_USERNAME }}/solar-system:${{ github.sha }}
                NODEPORT_IP: 10.108.66.224  


            - name: check files
              run: | 
               cat kubernetes/development/*.yaml 
             

               

            
                
               

               
                
            






        

        

        


      
         
         

